2020-12-18

设计模式 行为型 访问者模式 （喜欢）

我们使用一个访问者类 改变了它元素类的执行算法。通过这种方式，元素的执行算法可以随着访问者改变而改变。

元素对象已接受访问者对象 访问者对象就可以处理元素对象上的操作

意图：主要将数据结构与数据操作分离

主要解决：稳定的数据结构和易变的操作耦合问题

何时使用：需要一个对象结构中对象进行很多不同的并且不相干的操作，而需要避免让这些操作污染这些对象类，使用访问者模式可以将这些封装在类中

如何解决：在被访问的类中加一个对外提供接待访问者的接口

关键代码：在数据基础类里面有一个方法接受访问者，将自身引用传入访问者

应用实例：你到朋友家做客，你是访问者，朋友接受你的访问，你通过朋友的描述，然后对朋友描述进行判断

优点：符合单一职责原则 2.优秀的拓展性 3.灵活性

缺点：具体元素对访问者公布细节，违反了迪米特原则 2.具体元素变更比较困难 3.违背了依赖倒置原则，依赖具体类，没有依赖抽象

使用场景： 1.对象结构中对应的类很少改变，但经常需要在此对象结构上定义新操作
2.需要对一个对象结构中的对象进行很多不同的并且无相关的操作，而需要避免让这些操作污染这对象的类，也不希望在增加操作时改变这些类

注意事项：访问者可以对功能进行统一，可以进行报表、UI、拦截器、过滤器