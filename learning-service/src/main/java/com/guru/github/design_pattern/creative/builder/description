2020-12-29
设计模式 创建型 建造者模式

使用多个简单的对象 一步步构建成一个复杂的对象。一个build类会一步一步构造最终的对象

意图：将一个复杂的构建与其表示相分离，使得同样的构建过程可以创建不同的表示

主要解决：在软件系统中,有时候会面临一个复杂对象的创建工作，其通常由部分子对象用一定算法构成，由于需求的变化，这个复杂对象的各个部分经常面临者剧烈变化，组合经常改变的时候

何时使用：一些基本部件不会变，而其组合经常变化的时候

如何解决：将变与不变分离开

关键代码：建造者：创建和提供实例；导演：管理建造出来的实例的依赖关系

应用实例：1，去肯德基、汉堡、可乐、薯条、炸鸡翅等不变，而其组合是经常变化的 生成所谓的套餐
2.Java的StringBuilder

优点：建造者独立、易扩展；便于控制细节风险

缺点：产品必须有共同点、范围有限制；如内部变化复杂，会有很多的建造者类

使用场景：需要生成对象具有复杂的内部结构；需要生成的对象内部属性本身相互依赖

注意事项：与工厂模式的区别：建造者模式更加关注于零件装配的顺序