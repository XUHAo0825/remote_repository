2020-12-18

设计模式 行为类 状态模式

类的行为基于它的状态改变

我们创建表示各种状态的对象，一个行为随着行为对象改变而改变的context对象

意图：允许对象在内部状态发生改变它的行为，对象看起来好像改变了它的类

主要解决：对象的行为依赖于它的状态，并且可以根据它的状态改变而改变它相关行为

何时使用：代码中包含大量和对象状态有关的条件语句

应用实例：打篮球的运动员有正常状态、不正常状态和超常状态

优点：1.封装转换原则； 2.枚举可能的状态，在枚举状态之前需要确定状态种类 3.所有与某个状态有关的行为可以放在同一个类里，方便新增新状态

4. 允许状态转换逻辑与状态对象合成一体，而不是某个巨大的条件语句快

缺点：1.状态模式的使用必然会增加系统类和对象个数 2.状态模式的结构和实现都比较复杂，如果使用不当导致程序结构和代码混乱

3. 状态模式对开闭原则支持并不好，对于可以切换状态的状态模式，添加新的状态需要修改那些负责状态转换的代码，否则无法切换到新状态，而且修改某个状态类的行为也需要修改对应类源码

使用场景：行为随状态改变而改变 2.条件、分支语句的代替者