2020/12/19

设计模式 行为型 中介者模式

用来降低对象和类之间的通信复杂度

通常处理不同类之间的通信，并支持松耦合，代码易于维护

意图：用一个中介对象来封装一系列对象交互，中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立改变它们之间的交互

主要解决：对象和对象之间的大量关系，这样势必导致系统结构变得复杂，同时若干个对象发生改变，我们也需要跟踪与之相关联的对象，同时做出相应处理。

何时使用：多个类相互耦合，形成网状结构

如何解决：将上述网状结构分离为星型结构

关键代码：对象之间通信封装到一个类中单独处理

应用实例：
1.中国加入WTO之前，各个国家相互贸易，结构复杂，现在各个国家通过WTO来相互贸易
2.机场调度系统
3.MVC框架 其C就是M 模型 V 视图的中介者

优点：1.减低类的复杂度，将一对多转化为一对一；各个类之间的解耦；符合迪米特原则

缺点：中介者庞大，变得复杂难以维护

使用场景：系统中对象之间存在比较复杂的引用关系，导致他们之间依赖关系结构混乱而且难以复用该对象
通过一个中间类来封装类的行为，而不是想生成太多子类

注意事项：不应在职责混乱时使用