- 2020/12/15

- 设计模式 结构型 装饰器模式

- 允许向现有对象添加新的功能，同时不改变其结构

通过创建一个装饰类，用来包装原有的类，并在保持类方法签名完整性的前提，提供额外功能

意图：动态地给一个对象添加一些额外的职责。就添加功能而言，装饰器模式相比生成子类更加灵活

主要解决：一般来说，我们为了拓展一个类经常使用继承方式实现，由于继承为类引入静态特征，并且随着拓展功能的增多，子类会很膨胀

何时使用：在不想增加很多子类的情况下扩展类

如何解决：将具体功能职责划分，同时继承装饰者模式

优点：装饰类和被装饰类可以独立发展，不会相互耦合，装饰模式是继承的替代模式，装饰模式可以动态扩展一个实现类的功能

缺点：多层装饰会比较复杂

使用场景：
1.扩展一个类的功能
2.动态添加功能，动态撤销

注意事项：可以替代继承
