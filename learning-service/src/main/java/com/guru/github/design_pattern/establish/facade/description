- 2020/12/15

- 设计模式 结构型 外观模式

隐藏系统的复杂性，并向客户端提供一个客户端可以访问系统的接口，涉及到单一的类 这个类提供了客户端请求的简化方法和现有系统类的方法的委托调用

意图：为子系统中的一组接口提供一致的界面 外观模式定义了一个高层接口 这个接口使得这一子系统更加容易使用

主要解决：降低访问复杂系统的内部子系统的复杂度，简化客户端与之接口

何时使用：
1.客户不需要知道系统的内部复杂联系，整个系统只需要一个接待员即可
2.定义系统入口

如何解决：客户端不与系统耦合，外观类与系统耦合

优点:
1.减少系统相互依赖
2.提高灵活性
3.提高安全性

缺点:
1.不符合开闭原则,如果要改东西很麻烦,继承重写都不合适

使用场景:
1.为复杂模块或子系统提供外界访问的模块
2.子系统相对独立
3.预防低水平人员带来的风险

注意事项：
在层次化结构中，可以使用外观模式定义系统中每一层的入口